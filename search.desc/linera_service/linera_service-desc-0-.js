searchState.loadedDescShard("linera_service", 0, "This module provides the executables needed to operate a …\nHelper module to call the binaries of <code>linera-service</code> with …\nA running <code>Application</code> to be queried in GraphQL.\nWrapper to run a Linera client command.\nClose all the chains on the wallet.\nA faucet instance that can be queried.\nWhether <code>wallet_init</code> should use a faucet.\nA running faucet service.\nDo not close any chains, leaving them active.\nA running Linera net.\nThe information needed to start a Linera net of a …\nNetwork protocol in use\nNetwork protocol in use outside and inside a Linera net.\nA running node service.\nAction to perform when the <code>ClientWrapper</code> is dropped.\nRuns <code>linera assign</code>.\nRuns <code>linera benchmark</code>.\nObtains the hash of the <code>chain</code>’s tip block, as known by …\nRuns <code>linera create-application</code>.\nRuns <code>linera create-genesis-config</code>.\nReturns the default chain.\nHow to run Docker operations\nThe external network (e.g. proxy to the exterior)\nRuns <code>linera wallet follow-chain CHAIN_ID</code>.\nRuns <code>linera wallet forget-chain CHAIN_ID</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe internal network (e.g. proxy to validator)\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRuns <code>linera keygen</code>.\nRuns <code>linera local-balance</code>.\nHow to run Linera validators locally as a Kubernetes …\nHow to run Linera validators locally as native processes.\nSubscribes to the node service and returns a stream of …\nRuns <code>linera open-chain</code> then <code>linera assign</code>.\nRuns <code>linera open-chain</code>.\nRuns <code>linera process-inbox</code>.\nRuns <code>linera project new</code>.\nRuns <code>linera project publish</code>.\nRuns <code>linera project test</code>.\nRuns <code>linera wallet publish-and-create</code>.\nRuns <code>linera publish-data-blob</code>.\nRuns <code>linera publish-module</code>.\nRuns <code>linera query-balance</code>.\nRuns <code>linera query-validator</code>\nRuns <code>linera query-validators</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nRuns <code>linera read-data-blob</code>.\nHow to connect to running GCP devnet.\nRuns <code>linera wallet request-chain</code>.\nRuns <code>linera faucet</code>.\nRuns <code>linera service</code>.\nReturns the protocol schema to use in the node address …\nRuns <code>linera sync</code>.\nRuns <code>linera sync-validator</code>.\nRuns <code>linera transfer</code>.\nRuns <code>linera transfer</code> with owner accounts.\nRuns <code>linera transfer</code> with no logging.\nRuns <code>linera wallet init</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nBuild the binaries within the container.\nWhich binaries to use in the Docker container.\nLook for the binaries in the specified path.\nLook for the binaries in the parent directory of the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nA set of Linera validators running locally as native …\nThe information needed to start a <code>LocalKubernetesNet</code>.\nA wrapper of <code>LocalKubernetesNetConfig</code> to create a shared …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nDescription of the database engine to use inside a local …\nA set of Linera validators running locally as native …\nThe information needed to start a <code>LocalNet</code>.\nPath used for the run can come from a path whose lifetime …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nProvides a port for the node service. Increment the port …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nTerminates all the processes of a given validator.\nReturns the address to connect to a validator’s proxy.\nReturns a <code>linera_rpc::Client</code> to interact directly with a …\nReturns the validating key and an account key of the …\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nRemote net\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>RemoteNetTestingConfig</code> for running tests …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nOur root GraphQL mutation type.\nThe <code>NodeService</code> is a server that exposes a web-server to …\nOur root GraphQL query type.\nA wrapper type that allows proxying GraphQL queries to a …\nOur root GraphQL subscription type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new instance of the node service given a client …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nRuns the node service.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nRuns the unit and integration tests of an application.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nThe DynamoDB key value store\nThe DynamoDB description\nThe memory key value store\nThe memory description\nThe RocksDB key value store\nThe RocksDB description\nThe ScyllaDB key value store\nThe ScyllaDB description\nThe storage service key-value store\nThe storage service description\nThe description of a storage implementation.\nThe description of a storage implementation.\nThe configuration of the key value store in use.\nThe addition of the common config to get a full …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe namespace used\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nThe storage config\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nThe endpoint used\nThe path used\nThe path used\nWhether to use <code>block_in_place</code> or <code>spawn_blocking</code>.\nWhether to use <code>block_in_place</code> or <code>spawn_blocking</code>.\nThe URI for accessing the database\nThe URI for accessing the database\nWhether to use the DynamoDB Local system\nExtension trait for <code>tokio::process::Child</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReturns after the specified time or if we receive a …\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a user chain that we own.\nCreates an entry for a chain that we don’t own. The …\nReturns the list of all chain IDs for which we have a …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.")