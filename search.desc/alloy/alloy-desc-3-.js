searchState.loadedDescShard("alloy", 3, "Calls <code>U::from(self)</code>.\nIs this point compact?\nIs this point compressed?\nIs this point the identity point?\nCompute the expected total message length for a message …\nGet the tag octet needed to encode this set of <code>Coordinates</code>\nSerialize this value as a SEC1 <code>EncodedPoint</code>, optionally …\nSerialize this value as a SEC1 <code>EncodedPoint</code>, optionally …\nValidate that the given <code>EncodedPoint</code> is a valid public key …\nx-coordinate\nx-coordinate\nx-coordinate\ny-coordinate\nIs the y-coordinate odd?\nAffine point whose coordinates are represented by the …\nProjective point whose coordinates are represented by the …\nImplements the complete addition formula from …\nImplements the complete mixed addition formula from …\nImplements the exception-free point doubling formula from …\nConvenience wrapper trait covering functionality of …\nSHA-224 hasher.\nSHA-256 hasher.\nCore block-level SHA-256 hasher with variable output size.\nSHA-384 hasher.\nSHA-512 hasher.\nCore block-level SHA-512 hasher with variable output size.\nSHA-512/224 hasher.\nSHA-512/256 hasher.\nProcess input data in a chained manner.\nCompute hash of <code>data</code>.\nRetrieve result and consume hasher instance.\nWrite result into provided array and consume the hasher …\nWrite result into provided array and reset the hasher …\nRetrieve result and reset hasher instance.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate new hasher instance.\nCreate new hasher instance which has processed the …\nGet output size of the hasher\nReset hasher instance to its initial state.\nProcess data, updating the internal state.\nConverts an ECDSA public key to its corresponding Ethereum …\nConvert a raw, uncompressed public key to its …\nConverts an ECDSA private key to its corresponding …\nWhether the event is anonymous.\nThe ABI representation of this type.\nArray out of bounds access.\nUsed by the <code>assert()</code> builtin.\nTrailing bytes in deserialization buffer.\nThe number of variants in the enum.\nThe number of topics.\nThe number of variants.\nThe number of variants.\nA generic contract error.\nA detailed contract error, including a specific revert or …\nA detailed contract error, including a specific revert or …\nA contract’s custom error.\nA contract’s custom error.\nThe <code>TokenSeq</code> type corresponding to the tuple.\nThe underlying tuple type which represents this event’s …\nDivision or modulo by zero.\nThe statically-known ABI-encoded size of the type.\nEIP-712 domain attributes used in determining the domain …\nEmpty array pop.\nEnum conversion error.\nContains the error value\nABI Encoding and Decoding errors.\nA Solidity event topic.\nHex error.\nGeneric / unspecified error.\nA generic contract error.\nRepresents the reason for a revert in a generic contract …\nInvalid enum value.\nCalling invalid internal function.\nCould not decode an event from log topics.\nExtension trait for ABI representation.\nThe minimum length of the data for this type.\nThe name of this type.\nThe name of this type.\nThe struct name.\nContains the success value\nOther errors.\nOverran deserialization buffer.\nThe statically-known Non-standard Packed Mode ABI-encoded …\nA Solidity panic.\nA panic. See <code>Panic</code> for more information.\nA panic. See <code>Panic</code> for more information.\nRepresents a Solidity panic. Same as the Solidity …\nThe underlying tuple type which represents the error’s …\nThe underlying tuple type which represents this type’s …\nThe underlying tuple type which represents this type’s …\nRepresents a raw string message as the reason for the …\nRepresents a raw string message as the reason for the …\nABI Decoding recursion limit exceeded.\nValidation reserialization did not match input.\nAllocation failed.\nResource error (too large allocation or too large array).\nABI result type.\nThe function’s return struct.\nThe returns’ corresponding TokenSeq type.\nThe underlying tuple type which represents this type’s …\nRepresents a standard Solidity revert. These are thrown by …\nA generic revert. See <code>Revert</code> for more information.\nA generic revert. See <code>Revert</code> for more information.\nRepresents the reason for a revert in a smart contract.\nThe corresponding Rust type.\nThe error selector: <code>keccak256(SIGNATURE)[0..4]</code>\nThe function selector: <code>keccak256(SIGNATURE)[0..4]</code>\nThe error’s ABI signature.\nThe event’s ABI signature.\nThe function’s ABI signature.\nThe event’s ABI signature hash, or selector: …\nThe name of this type in Solidity.\nIterator over the function or error selectors of a …\nA Solidity function call.\nA Solidity constructor.\nA Solidity enum. This is always a wrapper around a <code>u8</code>.\nA Solidity custom error.\nSolidity event.\nA collection of <code>SolEvent</code>s.\nA collection of ABI-encodable call-like types. This …\nA Solidity struct.\nA Solidity type.\nThe Solidity type that this type corresponds to.\nA Solidity value.\nInvalid encoding in storage.\nThe corresponding <code>TokenSeq</code> type.\nThe arguments’ corresponding TokenSeq type.\nThe arguments’ corresponding TokenSeq type.\nThe corresponding ABI token type.\nA list of Solidity event topics.\nThe underlying tuple type which represents this event’s …\nA typecheck detected a word that does not match the data …\nArithmetic underflow or overflow.\nUnknown selector.\nThe ABI word type.\nEthereum ABI codec implementation.\nReturns the ABI representation of this type.\nABI decode the enum from the given buffer.\nABI decode this error’s arguments from the given slice, …\nABI decode this call’s arguments from the given slice, …\nABI-decodes the given data into one of the variants of <code>self</code>…\nABI-decode this type from the given data.\nABI-decodes the dynamic data of this event from the given …\nABI-decode this type from the given data.\nABI-decodes the given data into one of the variants of <code>self</code>…\nABI decode this call’s arguments from the given slice, …\nABI decode this call’s arguments from the given slice, …\nABI decode this call’s return values from the given …\nABI-decode this type from the given data.\nABI encode the enum.\nABI encode the error to the given buffer <strong>with</strong> its selector.\nABI encode the call to the given buffer <strong>with</strong> its selector.\nABI encode the call to the given buffer.\nABI-encodes <code>self</code> into the given buffer.\nABI-encodes the value.\nNon-standard Packed Mode ABI encoding.\nNon-standard Packed Mode ABI encoding.\nEncodes an ABI sequence suitable for function parameters.\nABI-encodes <code>self</code> into the given buffer, <em>without</em> any …\nABI encode the enum into the given buffer.\nABI encode the error to the given buffer <strong>without</strong> its …\nABI encode the call to the given buffer <strong>without</strong> its …\nABI encode the call’s return values.\nEncodes an ABI sequence.\nThe size of the encoded data, <em>without</em> any selectors.\nThe size of the error params when encoded in bytes, <strong>without</strong>…\nThe size of the ABI-encoded dynamic data in bytes.\nThe size of the encoded data in bytes, <strong>without</strong> its …\nThe size of the encoded data in bytes.\nCalculate the ABI-encoded size of the data.\nReturns an immutable reference to the inner custom error …\nReturns a mutable reference to the inner custom error if …\nReturns an immutable reference to the inner <code>Panic</code> if <code>self</code> …\nReturns a mutable reference to the inner <code>Panic</code> if <code>self</code> …\nReturns an immutable reference to the inner <code>Revert</code> if <code>self</code> …\nReturns a mutable reference to the inner <code>Revert</code> if <code>self</code> …\nReturns the panic code’s string representation.\nThe EIP-155 chain ID. The user-agent should refuse signing …\nCheck that the event’s signature matches the given …\nThe Solidity panic code.\nInstantiates a new error with a static str.\nDecodes and retrieves the reason for a revert from the …\nDecode the event from the given log object.\nDecode the events from the given log object.\nDecode the event from the given log object.\nDecode the events from the given log info.\nDecode the event from the given log info.\nDecodes and retrieves the reason for a revert from the …\nDecode the topics of this event from the given data.\nDetokenize the topics into a tuple of rust types.\nDetokenize this type’s value from the given token.\nDetokenize a value from the given token.\nReturns component EIP-712 types. These types are used to …\nEncode this data according to EIP-712 <code>encodeData</code> rules, …\nConvenience macro to instantiate an EIP-712 domain.\nEncodes this domain using EIP-712 <code>encodeData</code>.\nThe EIP-712-encoded type string.\nHashes this struct according to EIP-712 <code>hashStruct</code>.\nReturn the root EIP-712 type. This type is used to …\nDoes something.\nCalculates the EIP-712 <code>typeHash</code> for this struct.\nABI-encode the dynamic data of this event.\nABI-encode the dynamic data of this event into the given …\nTransform ca <code>Log</code> containing this event into a <code>Log</code> …\nEncode this event to a <code>LogData</code>.\nIndexed event parameter encoding.\nEncodes this type as preimage bytes which are then hashed …\nEncode the topics of this event.\nEncode the topics of this event into a fixed-size array.\nEncode the topics of this event into the given buffer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the panic code for the given number if it is a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>self</code> matches <code>CustomError</code>.\nReturns <code>true</code> if <code>self</code> matches <code>Panic</code>.\nReturns <code>true</code> if <code>self</code> matches <code>Revert</code>.\nReturns the PanicKind if this panic code is a known …\nThe user readable name of signing domain, i.e. the name of …\nConvert from the tuple type used for ABI encoding and …\nConvert decoded rust data to the event type.\nConvert from the tuple type used for ABI encoding and …\nConvert from the tuple type used for ABI encoding and …\nConvert decoded rust data to the event type.\nReturns the revert reason string, or <code>&quot;&lt;empty&gt;&quot;</code> if empty.\nThe reason string, provided by the Solidity contract.\nA disambiguating salt for the protocol. This can be used …\nThe selector of this instance.\nThe selector of this type at the given index, used in …\nReturns an iterator over the selectors of this type.\nGenerate types that implement <code>alloy-sol-types</code> traits, …\nSolidity types.\nThe name of the associated Solidity type.\nThe name of the associated Solidity type.\nReturns the reason for a revert as a string.\nConvert to the token type used for EIP-712 encoding and …\nTokenize the call’s arguments.\nTokenize the call’s arguments.\nTokenize the enum.\nTokenizes the given value into this type’s token.\nTokenize the event’s non-indexed parameters.\nThe number of bytes this type occupies in another topic’…\nThe event’s topics.\nReturns an error if the given selector is not known to …\nInstantiates a new <code>Error::TypeCheckFail</code> with the provided …\nInstantiates a new <code>Error::TypeCheckFail</code> with the provided …\nInstantiates a new <code>Error::TypeCheckFail</code> with the provided …\nInstantiates a new <code>Error::UnknownSelector</code> with the …\nUtilities used by different modules.\nReturns <code>true</code> if the given selector is known to this type.\nReturns <code>true</code> if the given token can be detokenized with …\nThe address of the contract that will verify the signature.\nThe current major version of the signing domain. …\nHex-encoded data.\nThe Solidity type we failed to produce.\nThe invalid log.\nThe maximum valid value.\nThe name of the enum.\nThe name of the enum or event.\nThe type name.\nThe unknown selector.\nThe invalid value.\nTrue if the token represents a dynamically-sized type.\nThe <code>Decoder</code> wraps a byte slice with necessary info to …\nThe ABI encoding of an empty byte array (<code>bytes</code> or <code>string</code>).\nAn ABI encoder.\nThe decoder recursion limit. This is currently hardcoded, …\nEthereum ABI tokens.\nA token composed of a sequence of other tokens.\nABI-decodes a token by wrapping it in a single-element …\nDecode a token from a decoder.\nABI-decodes top-level function args.\nDecodes ABI compliant vector of bytes into vector of …\nABI-decode the token sequence from the encoder.\nABI-encodes a single token.\nABI-encodes a tuple as ABI function params, suitable for …\nABI-encodes a token sequence.\nABI-encode the token sequence into the encoder.\nAppend head words to the encoder.\nCalculate the number of head words.\nAppend tail words to the encoder.\nCalculate the number of tail words.\nEthereum ABI tokens.\nTrue if the token represents a dynamically-sized type.\nA Dynamic Sequence - <code>T[]</code>\nA Fixed Sequence - <code>T[N]</code>\nA Packed Sequence - <code>bytes</code> or <code>string</code>\nEthereum ABI tokens.\nA token composed of a sequence of other tokens.\nA single EVM word - T for any value type.\nDecode a token from a decoder.\nABI-decode the token sequence from the encoder.\nABI-encode the token sequence into the encoder.\nAppend head words to the encoder.\nCalculate the number of head words.\nAppend tail words to the encoder.\nCalculate the number of tail words.\nAddress - <code>address</code>\nArray - <code>T[]</code>\nThe number of bits in the integer: <code>BITS</code>\nThe number of bytes in the integer: <code>BITS / 8</code>\nBool - <code>bool</code>\nSpecifies the number of bytes in a <code>FixedBytes</code> array as a …\nBytes - <code>bytes</code>\nFixedArray - <code>T[M]</code>\nFixedBytes - <code>bytesX</code>\nFunction - <code>function</code>\nThe name of the <code>Int</code> type: <code>int&lt;N&gt;</code>\nInt - <code>intX</code>\nThe signed integer Rust representation.\nSpecifies the number of bits in an <code>Int</code> or <code>Uint</code> as a type.\nThe name of the <code>FixedBytes</code> type: <code>bytes&lt;N&gt;</code>\nThe difference between the representation’s and this …\nString - <code>string</code>\nStatically guarantees that a <code>FixedBytes</code> byte count is …\nStatically guarantees that a <code>Int</code> or <code>Uint</code> bit count is …\nThe name of the <code>Uint</code> type: <code>uint&lt;N&gt;</code>\nUint - <code>uintX</code>\nThe unsigned integer Rust representation.\nThe index of the most significant byte in the Word type.\nDetokenizes a signed integer.\nDetokenizes an unsigned integer.\nABI-encode a signed integer in packed mode.\nABI-encode an unsigned integer in packed mode.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTokenizes a signed integer.\nTokenizes an unsigned integer.\nSee <code>usize::next_multiple_of</code>.\nCalculates the padded length of a slice by rounding its …\nCalculates the padded length of a slice of a specific …\nBasic, bearer or raw authentication in http or websocket …\nBackend connection task has stopped.\nRFC7617 HTTP Basic Auth.\nRFC6750 Bearer Auth.\nType alias for a pin-boxed future, with a <code>Send</code> bound on …\nA boxed, Clone-able <code>Transport</code> trait object.\nConnection details for a transport that can be boxed.\nCustom error.\nJSON deserialization error.\nJSON deserialization error.\nContains the error value\nContains the error value\nServer returned an error response.\nServer returned an error response.\nType for holding HTTP errors such as 429 rate limit error.\nHTTP Error with code and body\nReturned when a local pre-processing step fails. This …\nReturned when a local pre-processing step fails. This …\nMissing batch response.\nServer returned a null response when a non-null response …\nServer returned a null response when a non-null response …\nContains the success value\nContains the success value\nPin-boxed future.\nPubsub service is not available for the current provider.\nRaw auth string.\nAn RPC error.\nFuture for RPC-level requests.\nThe result of a JSON-RPC request.\nJSON serialization error.\nJSON serialization error.\nA <code>Transport</code> manages the JSON-RPC request/response …\nTransport error.\nTransport error.\nThe transport type that is returned by <code>connect</code>.\nConnection details for a transport.\nA transport error is an <code>RpcError</code> containing a …\nTransport error.\nFuture for transport-level requests.\nA transport result is a <code>Result</code> containing a <code>TransportError</code>.\nRpc server returned an unsupported feature.\nRpc server returned an unsupported feature.\nReturns a reference to the inner transport.\nMake a boxed trait object by cloning this transport.\nFallible conversion to an error response.\nInstantiate a new basic auth from an authority string.\nInstantiate a new <code>TransportError::BackendGone</code>.\nInstantiate a new basic auth from a username and password.\nInstantiate a new bearer auth from the given token.\nThe HTTP response body.\nConvert this transport into a boxed trait object.\nInstantiate a new <code>TransportError</code> from a custom error.\nInstantiate a new <code>TransportError</code> from a custom error.\nInstantiate a new <code>DeserError</code> from a <code>serde_json::Error</code> and …\nInstantiate a new <code>ErrorResp</code> from an error response.\nExtract the auth info from a URL.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConnect to a transport, and box it.\nConnect to the transport, returning a <code>Transport</code> instance.\nInstantiate a new <code>TransportError::HttpError</code>.\nMacro that return an <code>impl Future</code> type, with a <code>Send</code> bound …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if the error is a deserialization error.\nCheck if the error is an error response.\nReturns <code>true</code> if the transport connects to a local resource.\nReturns <code>true</code> if the transport is a local transport.\nCheck if the error is a local usage error.\nCheck if the error is a null response.\nChecks the <code>status</code> to determine whether the request should …\nAnalyzes the TransportErrorKind and decides if the request …\nCheck if the error is a serialization error.\nChecks the <code>status</code> to determine whether the service was …\nCheck if the error is a transport error.\nCheck if the error is an unsupported feature error.\nModule for housing transport layers.\nInstantiate a new <code>LocalUsageError</code> from a custom error.\nInstantiate a new <code>LocalUsageError</code> from a custom error …\nInstantiate a new <code>TransportError</code> from a missing ID.\nInstantiate a new box transport from a suitable transport.\nInstantiate a new <code>TransportError::PubsubUnavailable</code>.\nInstantiate a new raw auth from the given token.\nReturns <code>true</code> if the error is potentially recoverable. This …\nInstantiate a new <code>SerError</code> from a <code>serde_json::Error</code>. This …\nThe HTTP status code.\nMisc. utilities for building transports.\nThe underlying serde_json error.\nFor deser errors, the text that failed to deserialize.\nThe underlying serde_json error.\nFor deser errors, the text that failed to deserialize.\nAn asynchronous <code>Client</code> to make Requests with.\nAn Http transport.\nConnection details for a <code>ReqwestTransport</code>.\nAn <code>Http</code> transport using <code>reqwest</code>.\nCreates a <code>ClientBuilder</code> to configure a <code>Client</code>.\nGet a reference to the client.\nConvenience method to make a <code>DELETE</code> request to a URL.\nExecutes a <code>Request</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvenience method to make a <code>GET</code> request to a URL.\nGuess whether the URL is local, based on the hostname.\nConvenience method to make a <code>HEAD</code> request to a URL.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>Http</code> transport.\nConstructs a new <code>Client</code>.\nConvenience method to make a <code>PATCH</code> request to a URL.\nConvenience method to make a <code>POST</code> request to a URL.\nConvenience method to make a <code>PUT</code> request to a URL.\nStart building a <code>Request</code> with the <code>Method</code> and <code>Url</code>.\nSet the client.\nSet the URL.\nGet a reference to the URL.\nCreate a new <code>Http</code> transport with a custom client.\n202 Accepted [RFC9110, Section 15.3.3]\n208 Already Reported [RFC5842, Section 7.1]\n502 Bad Gateway [RFC9110, Section 15.6.3]\n400 Bad Request [RFC9110, Section 15.5.1]\nAn asynchronous request body.\n409 Conflict [RFC9110, Section 15.5.10]\nCONNECT\n100 Continue [RFC9110, Section 15.2.1]\n201 Created [RFC9110, Section 15.3.2]\nAn asynchronous <code>Client</code> to make Requests with.\nA <code>ClientBuilder</code> can be used to create a <code>Client</code> with custom …\nDELETE\n417 Expectation Failed [RFC9110, Section 15.5.18]\nContains the error value\nThe Errors that may occur when processing a <code>Request</code>.\n424 Failed Dependency [RFC4918, Section 11.4]\n403 Forbidden [RFC9110, Section 15.5.4]\n302 Found [RFC9110, Section 15.4.3]\n504 Gateway Timeout [RFC9110, Section 15.6.5]\nGET\n410 Gone [RFC9110, Section 15.5.11]\nHEAD\n<code>HTTP/0.9</code>\n<code>HTTP/1.0</code>\n<code>HTTP/1.1</code>\n<code>HTTP/2.0</code>\n<code>HTTP/3.0</code>\n505 HTTP Version Not Supported [RFC9110, Section 15.6.6]\n418 I’m a teapot [curiously not registered by IANA but …\n226 IM Used [RFC3229, Section 10.4.1]\n507 Insufficient Storage [RFC4918, Section 11.5]\n500 Internal Server Error [RFC9110, Section 15.6.1]\nA trait to try to convert some type into a <code>Url</code>.\n411 Length Required [RFC9110, Section 15.5.12]\n423 Locked [RFC4918, Section 11.3]\n508 Loop Detected [RFC5842, Section 7.2]\n405 Method Not Allowed [RFC9110, Section 15.5.6]\n421 Misdirected Request [RFC9110, Section 15.5.20]\n301 Moved Permanently [RFC9110, Section 15.4.2]\n300 Multiple Choices [RFC9110, Section 15.4.1]\n207 Multi-Status [RFC4918, Section 11.1]\nThe Request Method (VERB)\n511 Network Authentication Required [RFC6585, Section 6]\n203 Non-Authoritative Information [RFC9110, Section 15.3.4]\n406 Not Acceptable [RFC9110, Section 15.5.7]\n510 Not Extended [RFC2774, Section 7]\n404 Not Found [RFC9110, Section 15.5.5]\n501 Not Implemented [RFC9110, Section 15.6.2]\n304 Not Modified [RFC9110, Section 15.4.5]\n204 No Content [RFC9110, Section 15.3.5]\nA configuration for filtering out requests that shouldn’…\n200 OK [RFC9110, Section 15.3.1]\nOPTIONS\nContains the success value\n206 Partial Content [RFC9110, Section 15.3.7]\nPATCH\n413 Payload Too Large [RFC9110, Section 15.5.14]\n402 Payment Required [RFC9110, Section 15.5.3]\n308 Permanent Redirect [RFC9110, Section 15.4.8]\nPOST\n412 Precondition Failed [RFC9110, Section 15.5.13]\n428 Precondition Required [RFC6585, Section 3]\n102 Processing [RFC2518, Section 10.1]\n407 Proxy Authentication Required [RFC9110, Section 15.5.8]\nPUT\nConfiguration of a proxy that a <code>Client</code> should pass …\n416 Range Not Satisfiable [RFC9110, Section 15.5.17]\n431 Request Header Fields Too Large [RFC6585, Section 5]\n408 Request Timeout [RFC9110, Section 15.5.9]\n205 Reset Content [RFC9110, Section 15.3.6]\nA request which can be executed with <code>Client::execute()</code>.\nA builder to construct the properties of a <code>Request</code>.\nA Response to a submitted <code>Request</code>.\nExtension trait for http::response::Builder objects\nA <code>Result</code> alias where the <code>Err</code> case is <code>reqwest::Error</code>.\n303 See Other [RFC9110, Section 15.4.4]\n503 Service Unavailable [RFC9110, Section 15.6.4]\n101 Switching Protocols [RFC9110, Section 15.2.2]\nAn HTTP status code (<code>status-code</code> in RFC 9110 et al.).\n307 Temporary Redirect [RFC9110, Section 15.4.7]\n425 Too early [RFC8470, Section 5.2]\n429 Too Many Requests [RFC6585, Section 4]\nTRACE\n401 Unauthorized [RFC9110, Section 15.5.2]\n451 Unavailable For Legal Reasons [RFC7725, Section 3]\n422 Unprocessable Entity [RFC9110, Section 15.5.21]\n415 Unsupported Media Type [RFC9110, Section 15.5.16]\n426 Upgrade Required [RFC9110, Section 15.5.22]\n414 URI Too Long [RFC9110, Section 15.5.15]\n305 Use Proxy [RFC9110, Section 15.4.6]\nAn upgraded HTTP connection.\nA parsed URL record.\n506 Variant Also Negotiates [RFC2295, Section 8.1]\nRepresents a version of the HTTP spec.\nProxy <strong>all</strong> traffic to the passed URL.\nReturns a reference to the internal data of the <code>Body</code>.\nReturn the serialization of this URL.\nReturn a &amp;str representation of the HTTP method\nReturns a &amp;str representation of the <code>StatusCode</code>\nReturns the <code>u16</code> corresponding to this <code>StatusCode</code>.\nReturn the authority of this URL as an ASCII string.\nEnable HTTP basic authentication.\nSet the <code>Proxy-Authorization</code> header using Basic auth.\nEnable HTTP bearer authentication.\nGet the body.\nSet the request body.\nGet a mutable reference to the body.\nReturns a <code>Client</code> that uses this <code>ClientBuilder</code> …\nBuild a <code>Request</code>, which can be inspected, modified and …\nBuild a <code>Request</code>, which can be inspected, modified and …\nGet the full response body as <code>Bytes</code>.\nReturn whether this URL is a cannot-be-a-base URL, meaning …\nGet the standardised <code>reason-phrase</code> for this status code.\nStream a chunk of the response body.\nSet a timeout for only the connect phase of a <code>Client</code>.\nSet whether connections should emit verbose logs.\nAdds a new Tower <code>Layer</code> to the base connector <code>Service</code> which …\nGet the content-length of this response, if known.\nProvide a custom function to determine what traffic to …\nSet the <code>Proxy-Authorization</code> header to a specified value.\nSets the default headers for every request.\nSerialize with Serde using the internal representation of …\nDNS resolution\nOverride the DNS resolver implementation.\nIf this URL has a host and it is a domain name (not an IP …\nTurn a response into an error if the server returned an …\nTurn a reference to a response into an error if the server …\nReturns a reference to the associated extensions.\nReturns a mutable reference to the associated extensions.\nDisable CORS on fetching the request.\nSend a form body.\nReturn this URL’s fragment identifier, if any.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a slice of bytes to an HTTP method.\nConverts a &amp;u8 to a status code\nConvert a directory name as <code>std::path::Path</code> into an URL in …\nReturns a new no-proxy configuration based on environment …\nConvert a file name as <code>std::path::Path</code> into an URL in the …\nAssemble a builder starting from an existing <code>Client</code> and a …\nReturns a new no-proxy configuration based on a <code>no_proxy</code> …\nConverts a u16 to a status code.\nShortcut method to quickly make a <code>GET</code> request.\nReturn whether the URL has an ‘authority’, which can …\nEquivalent to <code>url.host().is_some()</code>.\nHTTP header types\nAdd a <code>Header</code> to this Request.\nGet the headers.\nAdd a set of Headers to the existing ones on this Request.\nGet the <code>Headers</code> of this <code>Response</code>.\nGet a mutable reference to the headers.\nGet a mutable reference to the <code>Headers</code> of this <code>Response</code>.\nReturn the parsed representation of the host for this URL. …\nReturn the string representation of the host (domain or IP …\nProxy all HTTP traffic to the passed URL.\nAllow HTTP/0.9 responses\nSet whether HTTP/1 connections will accept obsolete line …\nSet whether HTTP/1 connections will accept spaces between …\nSets whether invalid header lines should be silently …\nOnly use HTTP/1.\nSend headers as title case instead of lowercase.\nProxy all HTTPS traffic to the passed URL.\nRestrict the Client to be used with HTTPS only requests.\nBind to an interface by <code>SO_BINDTODEVICE</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn the serialization of this URL.\nReturns true if the error is related to the request or …\nReturns true if the error is from a type Builder.\nCheck if status is within 400-499.\nReturns true if the error is related to connect\nReturns true if the error is related to decoding the …\nWhether a method is considered “idempotent”, meaning …\nCheck if status is within 100-199.\nReturns true if the error is from a <code>RedirectPolicy</code>.\nCheck if status is within 300-399.\nReturns true if the error is related to the request\nWhether a method is considered “safe”, meaning the …\nCheck if status is within 500-599.\nReturn whether the URL is special (has a special scheme)\nReturns true if the error is from …\nCheck if status is within 200-299.\nReturns true if the error is related to a timeout.\nParse a string as an URL, with this URL as the base URL.\nSend a JSON body.\nTry to deserialize the response body as JSON.\nBind to a local IP Address.\nCreates a relative URL if possible, with this URL as the …\nGet the method.\nGet a mutable reference to the method.\nConstructs a new <code>ClientBuilder</code>.\nConstructs a new request.\nDisable auto response body brotli decompression.\nDisable auto response body deflate decompression.\nDisable auto response body gzip decompression.\nDisables the hickory-dns async resolver.\nClear all <code>Proxies</code>, so <code>Client</code> will use no proxy anymore.\nAdds a <code>No Proxy</code> exclusion list to this Proxy\nDisable auto response body zstd decompression.\nReturn a default <code>ParseOptions</code> that can fully configure the …\nReturn the origin of this URL (…\nParse an absolute URL from a string.\nParse an absolute URL from a string and add params to its …\nReturn the password for this URL, if any, as a …\nReturn the path for this URL, as a percent-encoded ASCII …\nUnless this URL is cannot-be-a-base, return an iterator of …\nReturn an object with methods to manipulate this URL’s …\nSet an optional timeout for idle sockets being kept-alive.\nSets the maximum idle connection per host allowed in the …\nReturn the port number for this URL, if any.\nReturn the port number for this URL, or the default port …\nAdd a <code>Proxy</code> to the list of proxies the <code>Client</code> will use.\nModify the query string of the URL.\nReturn this URL’s query string, if any, as a …\nParse the URL’s query string, if any, as …\nManipulate this URL’s query string, viewed as a sequence …\nEnables a read timeout.\nRedirect Handling\nSet a <code>RedirectPolicy</code> for this client.\nEnable or disable automatic setting of the <code>Referer</code> header.\nGet the remote address used to get this <code>Response</code>.\nOverride DNS resolution for specific domains to a …\nOverride DNS resolution for specific domains to particular …\nReturn the scheme of this URL, lower-cased, as an ASCII …\nConstructs the Request and sends it to the target URL, …\nSerialize with Serde using the internal representation of …\nChange this URL’s fragment identifier.\nChange this URL’s host.\nChange this URL’s host to the given IP address.\nChange this URL’s password.\nChange this URL’s path.\nChange this URL’s port number.\nChange this URL’s query string. If <code>query</code> is <code>None</code>, this …\nChange this URL’s scheme.\nChange this URL’s username.\nResolve a URL’s host and port number to <code>SocketAddr</code>.\nReturns the status code, if the error was generated from a …\nGet the <code>StatusCode</code> of this <code>Response</code>.\nSet that all sockets have <code>SO_KEEPALIVE</code> set with the …\nSet whether sockets have <code>TCP_NODELAY</code> enabled.\nGet the full response text.\nEnables a total request timeout.\nGet the timeout.\nEnables a request timeout.\nGet a mutable reference to the timeout.\nAssuming the URL is in the <code>file</code> scheme or similar, convert …\nAttempt to clone the request.\nAttempt to clone the RequestBuilder.\nConsumes the response and returns a future for a possible …\nA builder method for the <code>http::response::Builder</code> type that …\nReturns a possible URL related to this error.\nGet the url.\nGet the final <code>Url</code> of this <code>Response</code>.\nReturns a mutable reference to the URL related to this …\nGet a mutable reference to the url.\nSets the <code>User-Agent</code> header to be used by this client.\nReturn the username for this URL (typically the empty …\nGet the http version.\nSet HTTP version\nGet the HTTP <code>Version</code> of this <code>Response</code>.\nGet a mutable reference to the http version.\nAdd a url related to this error (overwriting any existing)\nStrip the related url from this error (if, for example, it …\nWrap a <code>HttpBody</code> in a box inside <code>Body</code>.\nAlias for an <code>Iterator</code> trait object over <code>SocketAddr</code>.\nA name that must be resolved to addresses.\nTrait for customizing DNS resolution in reqwest.\nAlias for the <code>Future</code> type returned by a DNS resolver.\nView the name as a string.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPerforms DNS resolution on a <code>Name</code>. The return type is a …\nAdvertises which content types the client is able to …\nAdvertises which character set the client is able to …\nAdvertises which content encoding the client is able to …\nAdvertises which languages the client is able to …\nMarker used by the server to advertise partial request …\nPreflight response indicating if the response to the …\nPreflight response indicating permitted HTTP headers.\nPreflight header response indicating permitted access …\nIndicates whether the response can be shared with …\nIndicates which headers can be exposed as part of the …\nIndicates how long the results of a preflight request can …\nInforms the server which HTTP headers will be used when an …\nInforms the server know which HTTP method will be used …\nIndicates the time in seconds the object has been in a …\nLists the set of methods support by a resource.\nAdvertises the availability of alternate services to …\nContains the credentials to authenticate a user agent with …\nA marker trait used to identify values that can be used as …\nSpecifies directives for caching mechanisms in both …\nIndicates how caches have handled a response and its …\nSpecifies directives that allow origin servers to control …\nControls whether or not the network connection stays open …\nIndicates if the content is expected to be displayed …\nUsed to compress the media-type.\nUsed to describe the languages intended for the audience.\nIndicates the size of the entity-body.\nIndicates an alternate location for the returned data.\nIndicates where in a full body message a partial message …\nAllows controlling resources the user agent is allowed to …\nAllows experimenting with policies by monitoring their …\nUsed to indicate the media type of the resource.\nContains stored HTTP cookies previously sent by the server …\nContains the date and time at which the message was …\nIndicates the client’s tracking preference.\nA drain iterator for <code>HeaderMap</code>.\nIdentifier for a specific version of a resource.\nIndicates expectations that need to be fulfilled by the …\nContains the date/time after which the response is …\nA view into a single location in a <code>HeaderMap</code>, which may be …\nContains information from the client-facing side of proxy …\nContains an Internet email address for a human user who …\nA view to all values stored in a single entry.\nSpecifies the domain name of the server and (optionally) …\nA set of HTTP headers\nRepresents an HTTP header field name\nRepresents an HTTP header field value.\nMakes a request conditional based on the E-Tag.\nMakes a request conditional based on the modification date.\nMakes a request conditional based on the E-Tag.\nMakes a request conditional based on range.\nMakes the request conditional based on the last …\nA marker trait used to identify values that can be used as …\nAn owning iterator over the entries of a <code>HeaderMap</code>.\nA possible error when converting a <code>HeaderName</code> from another …\nA possible error when converting a <code>HeaderValue</code> from a …\n<code>HeaderMap</code> entry iterator.\n<code>HeaderMap</code> mutable entry iterator\nAn iterator over <code>HeaderMap</code> keys.\nThe Last-Modified header contains the date and time when …\nAllows the server to point an interested client to another …\nIndicates the URL to redirect a page to.\nIndicates the max number of intermediaries the request …\nError returned when max capacity of <code>HeaderMap</code> is exceeded\nIndicates where a fetch originates from.\nAn occupied entry\nA view into a single occupied location in a <code>HeaderMap</code>.\nHTTP/1.0 header usually used for backwards compatibility.\nDefines the authentication method that should be used to …\nContains the credentials to authenticate a user agent to a …\nAssociates a specific cryptographic public key with a …\nSends reports of pinning violation to the report-uri …\nIndicates the part of a document that the server should …\nContains the address of the previous web page from which a …\nGoverns which referrer information should be included with …\nInforms the web browser that the current page or frame …\nThe Retry-After response HTTP header indicates how long …\nThe |Sec-WebSocket-Accept| header field is used in the …\nThe |Sec-WebSocket-Extensions| header field is used in the …\nThe |Sec-WebSocket-Key| header field is used in the …\nThe |Sec-WebSocket-Protocol| header field is used in the …\nThe |Sec-WebSocket-Version| header field is used in the …\nContains information about the software used by the origin …\nUsed to send cookies from the server to the user agent.\nTells the client to communicate with HTTPS instead of …\nInforms the server of transfer encodings willing to be …\nAllows the sender to include additional fields at the end …\nSpecifies the form of encoding used to safely transfer the …\nA possible error when converting a <code>HeaderValue</code> to a string …\nUsed as part of the exchange to upgrade the protocol.\nSends a signal to the server expressing the client’s …\nContains a string that allows identifying the requesting …\nDetermines how to match future requests with cached …\nAdded by proxies to track routing.\nA vacant entry\nA view into a single empty location in a <code>HeaderMap</code>.\nAn drain iterator of all values associated with a single …\nAn iterator of all values associated with a single header …\nA mutable iterator of all values associated with a single …\n<code>HeaderMap</code> value iterator.\n<code>HeaderMap</code> mutable value iterator\nGeneral HTTP header contains information about possible …\nDefines the authentication method that should be used to …\nMarker used by the server to indicate that the MIME types …\nControls DNS prefetching.\nIndicates whether or not a browser should be allowed to …\nStop pages from loading when an XSS attack is detected.\nInserts a key-value pair into the map.\nInsert the value into the entry.\nConverts a <code>HeaderValue</code> to a byte slice.\nReturns a <code>str</code> representation of the header.\nReturns the number of headers the map can hold without …\nClears the map, removing all key-value pairs. Keeps the …\nReturns true if the map contains a value for the specified …\nClears the map, returning all entries as an iterator.\nGets the given key’s corresponding entry in the map for …\nPerforms a case-insensitive comparison of the string …\nPerforms a case-insensitive comparison of the string …\nExtend a <code>HeaderMap</code> with the contents of another <code>HeaderMap</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a slice of bytes to an HTTP header name.\nAttempt to convert a byte slice to a <code>HeaderValue</code>.\nConverts a slice of bytes to an HTTP header name.\nAttempt to convert a <code>Bytes</code> buffer to a <code>HeaderValue</code>.\nConvert a <code>Bytes</code> directly into a <code>HeaderValue</code> without …\nConverts a HeaderName into a HeaderValue\nConverts a static string to a HTTP header name.\nConvert a static string to a <code>HeaderValue</code>.\nAttempt to convert a string to a <code>HeaderValue</code>.\nReturns a reference to the value associated with the key.\nGet a reference to the first value in the entry.\nReturns a view of all values associated with a key.\nReturns a mutable reference to the value associated with …\nGet a mutable reference to the first value in the entry.\nPanics\nInserts a key-value pair into the map.\nInsert the value into the entry.\nSets the value of the entry.\nInsert the value into the entry.\nSets the value of the entry.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a consuming iterator, that is, one that moves keys …\nTake ownership of the key\nConverts the <code>OccupiedEntry</code> into a mutable reference to the …\nReturns true if the map contains no elements.\nReturns true if the <code>HeaderValue</code> has a length of zero bytes.\nReturns <code>true</code> if the value represents sensitive data.\nAn iterator visiting all key-value pairs.\nReturns an iterator visiting all values associated with …\nReturns an iterator visiting all values associated with …\nAn iterator visiting all key-value pairs, with mutable …\nReturns an iterator mutably visiting all values associated …\nReturns a reference to the entry’s key\nReturns a reference to the entry’s key\nReturns a reference to the entry’s key.\nAn iterator visiting all keys.\nReturns the number of keys stored in the map.\nReturns the number of headers stored in the map.\nReturns the length of <code>self</code>.\nCreate an empty <code>HeaderMap</code>.\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the result of …\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the result of …\nRemoves a key from the map, returning the value associated …\nRemove the entry from the map.\nRemove the entry from the map.\nRemove the entry from the map.\nReserves capacity for at least <code>additional</code> more headers to …\nMark that the header value represents sensitive …\nYields a <code>&amp;str</code> slice if the <code>HeaderValue</code> only contains …\nInserts a key-value pair into the map.\nGets the given key’s corresponding entry in the map for …\nInserts a key-value pair into the map.\nInsert the value into the entry.\nInsert the value into the entry.\nReserves capacity for at least <code>additional</code> more headers to …\nCreate an empty <code>HeaderMap</code> with the specified capacity.\nAn iterator visiting all values.\nAn iterator visiting all values mutably.\nCreate an empty <code>HeaderMap</code> with the specified capacity.\nAn action to perform when a redirect status code is found.\nA type that holds information on the next request and …\nA type that controls the policy on how to handle the …\nCreate a custom <code>Policy</code> using the passed function.\nReturns an action failing the redirect with an error.\nReturns an action meaning reqwest should follow the next …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a <code>Policy</code> with a maximum number of redirects.\nCreate a <code>Policy</code> that does not follow any redirect.\nGet the list of previous URLs that have already been …\nApply this policy to a given <code>Attempt</code> to produce a <code>Action</code>.\nGet the type of redirect.\nReturns an action meaning reqwest should not follow the …\nGet the next URL to redirect to.\nRateLimitRetryPolicy implements RetryPolicy to determine …\nA Transport Layer that is responsible for retrying …\nA Tower Service used by the RetryBackoffLayer that is …\nRetryPolicy defines logic for which TransportError …\nProviders may include the <code>backoff</code> in the error response …\nProvides a backoff hint if the error response contains it\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new retry layer with the given parameters and …\nCreates a new retry layer with the given parameters and …\nWhether to retry the request based on the given <code>error</code>\nGuess whether the URL is local, based on the hostname.\nConvert to a <code>Box&lt;RawValue&gt;</code> from a <code>Serialize</code> type, mapping …")