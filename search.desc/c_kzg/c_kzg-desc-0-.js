searchState.loadedDescShard("c_kzg", 0, "A basic blob data.\nAn array of 32 bytes. Represents an untrusted (potentially …\nAn array of 48 bytes. Represents an untrusted (potentially …\nThe underlying c-kzg library returned an error.\n&lt; The supplied data is invalid in some way.\n&lt; Internal error - this should never occur.\n&lt; Could not allocate memory.\n&lt; Success!\nThe common return type for all routines in which something …\nWrong number of bytes.\nThe hex string is invalid.\nThe KZG commitment is invalid.\nThe KZG proof is invalid.\nThe provided trusted setup is invalid.\nA trusted (valid) KZG commitment.\nA trusted (valid) KZG proof.\nStores the setup and parameters needed for computing KZG …\nLoading the trusted setup failed.\nPaired arguments have different lengths.\nReturns default Ethereum mainnet KZG settings.\nReturns default Ethereum mainnet KZG settings as an <code>Arc</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInitializes a trusted setup from <code>FIELD_ELEMENTS_PER_BLOB</code> …\nLoads the trusted setup parameters from a file. The file …\nLoads the trusted setup parameters from a file.\nCreates a new instance from a byte array.\nCreates a new instance from a byte array.\nCreates a new blob from a byte array.\nParses the contents of a KZG trusted setup file into a …")