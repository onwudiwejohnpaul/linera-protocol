searchState.loadedDescShard("substrate_bn", 0, "Returns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInitalizes new F_q2(a + bi, a is real coeff, b is …\nU256/U512 errors\n256-bit, stack allocated biginteger for use in prime field …\n512-bit, stack allocated biginteger for use in extension …\nAdd <code>other</code> to <code>self</code> (mod <code>modulo</code>)\nReturn an Iterator&lt;Item=bool&gt; over all bits from MSB to …\nDivides self by modulo, returning remainder and, if …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitialize U256 from slice of bytes (big endian)\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTurn <code>self</code> into its multiplicative inverse (mod <code>modulo</code>)\nMultiply <code>self</code> by <code>other</code> (mod <code>modulo</code>) via the Montgomery …\nTurn <code>self</code> into its additive inverse (mod <code>modulo</code>)\nMultiplies c1 by modulo, adds c0.\nProduce a random number (mod <code>modulo</code>)\nGet a random U512\nSubtract <code>other</code> from <code>self</code> (mod <code>modulo</code>)")